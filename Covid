-- Looking at total cases vs total deaths
-- Likelihood to die if you contract COVID
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage
FROM public."CovidDeaths"
-- WHERE location LIKE '%Australia%'
ORDER BY 1,2;

-- Looking at total cases vs population
SELECT location, date, total_cases, population, (total_cases/population)*100 as pop_percentage
FROM public."CovidDeaths"
ORDER BY 1,2;

--Looking at latest total cases for each country
SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM public."CovidDeaths"
WHERE continent IS NOT NULL
GROUP BY 1,2
ORDER BY 4 DESC NULLS LAST;

--Looking at latest total cases for each country
SELECT location, population, date, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM public."CovidDeaths"
WHERE continent IS NOT NULL
GROUP BY 1,2,3
ORDER BY 4 DESC NULLS LAST;

--Looking at Highest death count per population
SELECT location, population, MAX(total_deaths) as TotalDeathCount
FROM public."CovidDeaths"
WHERE continent IS NOT NULL
GROUP BY 1,2
ORDER BY 3 DESC;

--Looking at Continent total death count
SELECT continent, MAX(population) AS population, SUM(new_deaths) as TotalDeathCount
FROM public."CovidDeaths"
WHERE continent IS NOT NULL
GROUP BY 1
ORDER BY 3 DESC;

--Looking at Continent total death count
SELECT continent, SUM(new_deaths) as TotalDeathCount
FROM public."CovidDeaths"
WHERE continent IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC;

--Looking at World total death count
SELECT location, population, MAX(total_cases) AS TotalCases, MAX(total_deaths) as TotalDeathCount
FROM public."CovidDeaths"
WHERE location LIKE '%World'
GROUP BY 1,2
ORDER BY 3 DESC;

--Global numbers
SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS DeathPercentage
FROM public."CovidDeaths"
WHERE continent IS NOT NULL;

-- Daily Covid Cases and Deaths
SELECT date, SUM(new_cases) AS DailyCases, SUM(new_deaths) AS DailyDeaths
FROM public."CovidDeaths"
WHERE continent IS NOT NULL
GROUP BY 1
ORDER BY date;

-- Looking at Total Population vs. Vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM public."CovidDeaths" AS dea
JOIN public."CovidVaccinations" AS vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3;

-- USE CTE/WINDOW FUNCTION
WITH PopvsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
AS (
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM public."CovidDeaths" AS dea
JOIN public."CovidVaccinations" AS vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3
)

SELECT *, (RollingPeopleVaccinated/population*100) AS RollingVaccinatedPercentage
FROM PopvsVac;


-- -- Creating view to store data for later visualisations
-- CREATE VIEW PercentPeopleVaccinated AS
-- SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
-- SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
-- FROM public."CovidDeaths" AS dea
-- JOIN public."CovidVaccinations" AS vac
-- ON dea.location = vac.location
-- AND dea.date = vac.date
-- WHERE dea.continent IS NOT NULL
-- ORDER BY 2,3;

SELECT * FROM PercentPeopleVaccinated